{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Strongman \uf0c1 Free open-source browser-based password manager Open Strongman Password Manager Overview \uf0c1 Strongman is a free open-source browser-based password manager written in javascript with a touch of php. It uses a master password combined with username and domain to create \"computed\" passwords (similar to lesspass). It can also use AES-256 encryption to store \"custom\" passwords and \"secure notes\" on a web server. The emphasis is on speed , security , and simplicity . Features \uf0c1 Strongman is completely free and open source. It provides both lesspass-style computed passwords as well as AES-256-encrypted \"custom\" passwords. Strongman does all password computations as well as AES-256 encryption/decryption of custom passwords in your browser . Your master password is never transmitted to the server. Being an online service, Strongman is available from all your Internet-connected devices. There is no need to synchronize password databases among devices. Like all good security software, the source code is available for inspection! ( github repository ) Strongman does not require signup or login. Since there is no session, it is stateless , adding greatly to its security. You need only enter your master password, which never leaves your browser page (examine the source code if you want to confirm that). It is very simple and fast to use. The truly paranoid who cannot audit the source code can turn off online mode after the Strongman app is loaded. In offline mode, stored password profiles and encrypted passwords are unavailable, but computed passwords will work fine. Why I Created Strongman \uf0c1 There are many password managers. Why did I invent a new one? In the first place, I became convinced that for proper security for online accounts, everyone should use a password manager . But I couldn't fully trust a program that wasn't open source, which ruled out all the commercial ones I knew about. Also, I wanted to be able to host it on my own server. That greatly reduced my options. I also wanted great speed and ease of use. I found lesspass , which is open source and can be self-hosted. It nearly filled my needs, except migrating to it would mean I would have to change all my site passwords. Furthermore, there's no way to change the master password without changing all the website passwords it generates. So I set out to build my ideal password manager. Essentially I adopted the extremely secure computed passwords of lesspass, but added the ability to use AES-256 encryption for \"custom\" passwords and \"secure notes.\" This way, one can optionally store any password one wants. This also allowed me to add the ability to change the master password. Note When changing a master password in Strongman, all the computed passwords associated with the old master password are converted to AES-256 encrypted passwords using the new master password. Installation \uf0c1 Installation is not necessary for most users, since the Strongman project hosts the web app for free public access: https://strongman.tech/app . If you wish to run the web app on your own server, or to help with development, download the project from the github repository . Upload the \"app\" directory to any location accessible to your php7.1+-enabled web server. Make sure the \"data-source\" directory is writable by your web server user. That's it. There's no database. Account information is stored in files, one file per master password. Strongman Security \uf0c1 Security Overview \uf0c1 According to a security analysis presented at the 23rd Usenix Security Symposium in 2014, 80% of the web-based password managers tested were insecure. Strongman should be immune to the cited vulnerabilities due to its statelessness as well as the lack of vulnerable features such as bookmarklets, one-time passwords, and shared passwords. I invite others to perform a security audit for Strongman. Computed Passwords \uf0c1 Strongman allows lesspass-style computed passwords, which does not involve storing the password at all. The password is \"recalculated\" from the master password, domain name, username, and password options, such as length and character sets. For these computed passwords, only a \"profile\" is stored. Here is an example \"profile\" entry from my own Strongman account. (I have modified the email address.) [vitacost.com] myemail@example.com = 7,14,1,,1542057929 In this case, vitacost.com is the domain name, and myemail@example.com is the username. The other profile information is: 7: bitfield-encoded character set. 7 means use upper/lowercase letters and numbers, but no special characters. 14: password length 1: password sequence number (This is incremented to create a new computed password.) 1542057929: timestamp to keep track of password age In sum, computed passwords involve no password storage whatsoever. However, they are very inflexible. They cannot be modified by the user other than specifying the character set and length. So if you already have some secure passwords that you'd like to keep using with Strongman, computed passwords are not a solution. Plus, as explained in Why I Created Strongman , the master password cannot be changed without changing all the computed passwords. To solve this problem, Strongman allows storing of AES-encrypted passwords and notes, described in the next section. AES-Encrypted Passwords and Notes \uf0c1 Whenever you need to store a particular password (rather than use a computed one) you click the \"Save\" button in Strongman. That causes the password to be encrypted (by the webpage using javascript) and then sent to the server for storage. This is military-grade encryption, and in my opinion is every bit as secure as the computed passwords. When using encrypted passwords, Strongman remains stateless . Futhermore, the AES-encryption takes place in the browser, before being transmitted to the server for storage. In addition to encrypted passwords, Strongman offers encrypted secure notes . This allows you to add any sort of note to either a computed or an encrypted password entry. Here's an example of an encrypted password entry from my own Strongman account: [wimaxcr.com] invoice@ = 15,14,1,fc430283546cf012faf69539a13c5bd4,cb4c00b93772d665d6e8f8158f09779f,1539199590 Here, wimaxcr.com is the domain name, and invoice@ is the username. The other profile information is: 15: character sets (ignored) 14: password length (ignored) 1: password sequence number (ignored) fc430283546cf012faf69539a13c5bd4: AES-256 encrypted notes cb4c00b93772d665d6e8f8158f09779f: AES-256 encrypted password 1539199590: timestamp to keep track of password age The Master Password \uf0c1 The Password Dilema \uf0c1 It is surprisingly difficult for a human to choose a strong password. Humans are not made to think at random; we are creatures of patterns and habits. On the other hand, random (machine chosen) passwords consisting of letters, numbers, and symbols are hard to memorize. How would you like to memorize this example 14-character password: wyY#XiQ1h0E/2~? On the other hand, simply mangling dictionary words to create a password might look secure, but it probably isn't. Here's a web comic with commentary that illustrates that point well. The conclusion drawn by the comic is \"Through 20 years of effort, we've successfully trained everyone to use passwords that are hard for humans to remember, but easy for computers to guess.\" Diceware Passwords \uf0c1 This is where \"Diceware\" passwords come to the rescue. It turns out that humans ARE capable of easily memorizing \"passphrases\" consisting of, say, 7 random words , taken from a \"Diceware\" dictionary of 7,776 words. This results in a passphrase which is similar in entropy (difficulty to guess) to the 14 character password. Here is an example 7-word Diceware passphrase: \"catalyst sedative certify unused gap dodge alienate\". If you're not completely convinced that a random series of words (Diceware passphrase) is far better than a random or contrived series of characters, please read this excellent article about Diceware . When you are ready to obtain a Diceware passphrase, take a look at this excellent online Diceware passphrase generator . As a final note: if a brute force attacker were to obtain a password hash created from a 7-word Diceware passphrase, and if he could muster 1,000,000,000,000 guesses per second (only possible by a nation state player such as the NSA), the average time to guess a 7-word passphrase would be over 27 million years!","title":"Home"},{"location":"#strongman","text":"Free open-source browser-based password manager Open Strongman Password Manager","title":"Strongman"},{"location":"#overview","text":"Strongman is a free open-source browser-based password manager written in javascript with a touch of php. It uses a master password combined with username and domain to create \"computed\" passwords (similar to lesspass). It can also use AES-256 encryption to store \"custom\" passwords and \"secure notes\" on a web server. The emphasis is on speed , security , and simplicity .","title":"Overview"},{"location":"#features","text":"Strongman is completely free and open source. It provides both lesspass-style computed passwords as well as AES-256-encrypted \"custom\" passwords. Strongman does all password computations as well as AES-256 encryption/decryption of custom passwords in your browser . Your master password is never transmitted to the server. Being an online service, Strongman is available from all your Internet-connected devices. There is no need to synchronize password databases among devices. Like all good security software, the source code is available for inspection! ( github repository ) Strongman does not require signup or login. Since there is no session, it is stateless , adding greatly to its security. You need only enter your master password, which never leaves your browser page (examine the source code if you want to confirm that). It is very simple and fast to use. The truly paranoid who cannot audit the source code can turn off online mode after the Strongman app is loaded. In offline mode, stored password profiles and encrypted passwords are unavailable, but computed passwords will work fine.","title":"Features"},{"location":"#why-i-created-strongman","text":"There are many password managers. Why did I invent a new one? In the first place, I became convinced that for proper security for online accounts, everyone should use a password manager . But I couldn't fully trust a program that wasn't open source, which ruled out all the commercial ones I knew about. Also, I wanted to be able to host it on my own server. That greatly reduced my options. I also wanted great speed and ease of use. I found lesspass , which is open source and can be self-hosted. It nearly filled my needs, except migrating to it would mean I would have to change all my site passwords. Furthermore, there's no way to change the master password without changing all the website passwords it generates. So I set out to build my ideal password manager. Essentially I adopted the extremely secure computed passwords of lesspass, but added the ability to use AES-256 encryption for \"custom\" passwords and \"secure notes.\" This way, one can optionally store any password one wants. This also allowed me to add the ability to change the master password. Note When changing a master password in Strongman, all the computed passwords associated with the old master password are converted to AES-256 encrypted passwords using the new master password.","title":"Why I Created Strongman"},{"location":"#installation","text":"Installation is not necessary for most users, since the Strongman project hosts the web app for free public access: https://strongman.tech/app . If you wish to run the web app on your own server, or to help with development, download the project from the github repository . Upload the \"app\" directory to any location accessible to your php7.1+-enabled web server. Make sure the \"data-source\" directory is writable by your web server user. That's it. There's no database. Account information is stored in files, one file per master password.","title":"Installation"},{"location":"#strongman-security","text":"","title":"Strongman Security"},{"location":"#security-overview","text":"According to a security analysis presented at the 23rd Usenix Security Symposium in 2014, 80% of the web-based password managers tested were insecure. Strongman should be immune to the cited vulnerabilities due to its statelessness as well as the lack of vulnerable features such as bookmarklets, one-time passwords, and shared passwords. I invite others to perform a security audit for Strongman.","title":"Security Overview"},{"location":"#computed-passwords","text":"Strongman allows lesspass-style computed passwords, which does not involve storing the password at all. The password is \"recalculated\" from the master password, domain name, username, and password options, such as length and character sets. For these computed passwords, only a \"profile\" is stored. Here is an example \"profile\" entry from my own Strongman account. (I have modified the email address.) [vitacost.com] myemail@example.com = 7,14,1,,1542057929 In this case, vitacost.com is the domain name, and myemail@example.com is the username. The other profile information is: 7: bitfield-encoded character set. 7 means use upper/lowercase letters and numbers, but no special characters. 14: password length 1: password sequence number (This is incremented to create a new computed password.) 1542057929: timestamp to keep track of password age In sum, computed passwords involve no password storage whatsoever. However, they are very inflexible. They cannot be modified by the user other than specifying the character set and length. So if you already have some secure passwords that you'd like to keep using with Strongman, computed passwords are not a solution. Plus, as explained in Why I Created Strongman , the master password cannot be changed without changing all the computed passwords. To solve this problem, Strongman allows storing of AES-encrypted passwords and notes, described in the next section.","title":"Computed Passwords"},{"location":"#aes-encrypted-passwords-and-notes","text":"Whenever you need to store a particular password (rather than use a computed one) you click the \"Save\" button in Strongman. That causes the password to be encrypted (by the webpage using javascript) and then sent to the server for storage. This is military-grade encryption, and in my opinion is every bit as secure as the computed passwords. When using encrypted passwords, Strongman remains stateless . Futhermore, the AES-encryption takes place in the browser, before being transmitted to the server for storage. In addition to encrypted passwords, Strongman offers encrypted secure notes . This allows you to add any sort of note to either a computed or an encrypted password entry. Here's an example of an encrypted password entry from my own Strongman account: [wimaxcr.com] invoice@ = 15,14,1,fc430283546cf012faf69539a13c5bd4,cb4c00b93772d665d6e8f8158f09779f,1539199590 Here, wimaxcr.com is the domain name, and invoice@ is the username. The other profile information is: 15: character sets (ignored) 14: password length (ignored) 1: password sequence number (ignored) fc430283546cf012faf69539a13c5bd4: AES-256 encrypted notes cb4c00b93772d665d6e8f8158f09779f: AES-256 encrypted password 1539199590: timestamp to keep track of password age","title":"AES-Encrypted Passwords and Notes"},{"location":"#the-master-password","text":"","title":"The Master Password"},{"location":"#the-password-dilema","text":"It is surprisingly difficult for a human to choose a strong password. Humans are not made to think at random; we are creatures of patterns and habits. On the other hand, random (machine chosen) passwords consisting of letters, numbers, and symbols are hard to memorize. How would you like to memorize this example 14-character password: wyY#XiQ1h0E/2~? On the other hand, simply mangling dictionary words to create a password might look secure, but it probably isn't. Here's a web comic with commentary that illustrates that point well. The conclusion drawn by the comic is \"Through 20 years of effort, we've successfully trained everyone to use passwords that are hard for humans to remember, but easy for computers to guess.\"","title":"The Password Dilema"},{"location":"#diceware-passwords","text":"This is where \"Diceware\" passwords come to the rescue. It turns out that humans ARE capable of easily memorizing \"passphrases\" consisting of, say, 7 random words , taken from a \"Diceware\" dictionary of 7,776 words. This results in a passphrase which is similar in entropy (difficulty to guess) to the 14 character password. Here is an example 7-word Diceware passphrase: \"catalyst sedative certify unused gap dodge alienate\". If you're not completely convinced that a random series of words (Diceware passphrase) is far better than a random or contrived series of characters, please read this excellent article about Diceware . When you are ready to obtain a Diceware passphrase, take a look at this excellent online Diceware passphrase generator . As a final note: if a brute force attacker were to obtain a password hash created from a 7-word Diceware passphrase, and if he could muster 1,000,000,000,000 guesses per second (only possible by a nation state player such as the NSA), the average time to guess a 7-word passphrase would be over 27 million years!","title":"Diceware Passwords"},{"location":"user-guide/","text":"Using Strongman \uf0c1 Open Strongman Password Manager Fast and Easy Instructions \uf0c1 Enter the master passphrase Start typing the domain name in the 'Domain' field. If you have used this password before, you will see the domain-username in a dropdown list. Click to choose it. You're done; the password is automatically copied to the clipboard for you (unless you've disabled that in the settings menu.) For a new entry , just enter the domain and username. Change the password computation options for this username if necessary (use the '\u2630' button). Click the \"Compute\" button. The password is calculated and (optionally) copied to clipboard. The next time you need this password, you can select it from the dropdown list. If you want to modify or replace the computed password, just edit it and click the \"Save\" button. This \"custom\" password will be AES256-encrypted and stored on the server. Note To Change the Master Password Enter the new master password and compute or save a site password. That creates a new Strongman account with the new master password. Use \"Import Passwords from Another Strongman Account\" (under \"Settings and Tools\" near the bottom of the Strongman app), specifying the master password of the old account. After the passwords and notes are imported, you can delete the old Strongman account via the 'Delete Strongman Account' option. Short Demo Video \uf0c1 Coming Soon!","title":"User Guide"},{"location":"user-guide/#using-strongman","text":"Open Strongman Password Manager","title":"Using Strongman"},{"location":"user-guide/#fast-and-easy-instructions","text":"Enter the master passphrase Start typing the domain name in the 'Domain' field. If you have used this password before, you will see the domain-username in a dropdown list. Click to choose it. You're done; the password is automatically copied to the clipboard for you (unless you've disabled that in the settings menu.) For a new entry , just enter the domain and username. Change the password computation options for this username if necessary (use the '\u2630' button). Click the \"Compute\" button. The password is calculated and (optionally) copied to clipboard. The next time you need this password, you can select it from the dropdown list. If you want to modify or replace the computed password, just edit it and click the \"Save\" button. This \"custom\" password will be AES256-encrypted and stored on the server. Note To Change the Master Password Enter the new master password and compute or save a site password. That creates a new Strongman account with the new master password. Use \"Import Passwords from Another Strongman Account\" (under \"Settings and Tools\" near the bottom of the Strongman app), specifying the master password of the old account. After the passwords and notes are imported, you can delete the old Strongman account via the 'Delete Strongman Account' option.","title":"Fast and Easy Instructions"},{"location":"user-guide/#short-demo-video","text":"Coming Soon!","title":"Short Demo Video"},{"location":"about/contributing/","text":"Contributing to Strongman \uf0c1 The Strongman project welcomes contributions from developers and users in the open source community. Contributions can be made in a number of ways, a few examples are: Code patches via pull requests Documentation improvements Bug reports and patch reviews Code of Conduct \uf0c1 Everyone interacting in the MkDocs project's codebases, issue trackers, chat rooms, and mailing lists is expected to follow the PyPA Code of Conduct . Reporting an Issue \uf0c1 Please include as much detail as you can. Let us know your browser type and version. We cannot address issues with self-hosted instances of Strongman that are not reproducable on our public Strongman app.","title":"Contributing"},{"location":"about/contributing/#contributing-to-strongman","text":"The Strongman project welcomes contributions from developers and users in the open source community. Contributions can be made in a number of ways, a few examples are: Code patches via pull requests Documentation improvements Bug reports and patch reviews","title":"Contributing to Strongman"},{"location":"about/contributing/#code-of-conduct","text":"Everyone interacting in the MkDocs project's codebases, issue trackers, chat rooms, and mailing lists is expected to follow the PyPA Code of Conduct .","title":"Code of Conduct"},{"location":"about/contributing/#reporting-an-issue","text":"Please include as much detail as you can. Let us know your browser type and version. We cannot address issues with self-hosted instances of Strongman that are not reproducable on our public Strongman app.","title":"Reporting an Issue"},{"location":"about/license/","text":"License \uf0c1 The legal stuff. Included projects \uf0c1 Themes used under license from the ReadTheDocs projects. ReadTheDocs theme - View license . Many thanks to the authors and contributors of those wonderful projects. MkDocs License (BSD) \uf0c1 Copyright \u00a9 2014, Tom Christie. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"License"},{"location":"about/license/#license","text":"The legal stuff.","title":"License"},{"location":"about/license/#included-projects","text":"Themes used under license from the ReadTheDocs projects. ReadTheDocs theme - View license . Many thanks to the authors and contributors of those wonderful projects.","title":"Included projects"},{"location":"about/license/#mkdocs-license-bsd","text":"Copyright \u00a9 2014, Tom Christie. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"MkDocs License (BSD)"},{"location":"about/release-notes/","text":"Release Notes \uf0c1 Maintenance team \uf0c1 The current members of the Strongman team: @lstandish Version 1.0 ( initial release ) \uf0c1","title":"Release Notes"},{"location":"about/release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"about/release-notes/#maintenance-team","text":"The current members of the Strongman team: @lstandish","title":"Maintenance team"},{"location":"about/release-notes/#version-10-initial-release","text":"","title":"Version 1.0 (initial release)"}]}