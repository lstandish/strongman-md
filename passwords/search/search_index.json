{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Strongman \uf0c1 Free Open Source Online Password Manager Overview \uf0c1 Strongman is a free open-source online password manager written in javascript with a touch of php. Strongman has two basic modes of functionality: It uses a master password combined with the username and domain to create \"computed\" passwords (similar to lesspass ). In this mode, only a \"password profile\" is stored on the server. The site password itself is not stored. It can use the master password to encrypt (AES-256) \"custom\" passwords and \"secure notes,\" which are then stored on a web server. The emphasis is on speed , security , and simplicity . Open Strongman Password Manager Features \uf0c1 Strongman is completely free and open source. Diceware master passphrases are strongly recommended, and in fact must be used unless overridden by a setting. It provides both lesspass-style computed passwords as well as AES-256-encrypted \"custom\" passwords. Strongman does all password computations as well as AES-256 encryption/decryption of custom passwords in your browser . Your master password is never transmitted to the server. Being an online service, Strongman is available from all your Internet-connected devices. There is no need to synchronize password databases among devices. Like all good security software, the source code is available for inspection! ( github repository ) Strongman does not require signup or login. Since there is no session, it is stateless , adding greatly to its security. You need only enter your master password, which never leaves your browser page (examine the source code if you want to confirm that). Strongman is extremely simple and fast to use. It aims to put your password into the computer clipboard with as few clicks as possible. It doesn't fill any web forms for you, to avoid security risks. The app is mobile-adaptive for use on cell phones and the like. Later, with help from the Github community, I may add a native Android app. The truly paranoid who cannot audit the source code can turn off online mode after the Strongman app is loaded. In offline mode, stored password profiles and encrypted passwords are unavailable, but computed passwords will work fine. Why I Created Strongman \uf0c1 There are many password managers. Why did I invent a new one? In the first place, I became convinced that for proper security for online accounts, everyone should use a password manager . But I couldn't fully trust a program that wasn't open source, which ruled out all the commercial ones I knew about. Also, I wanted to be able to host it on my own server. That greatly reduced my options. I also wanted great speed and ease of use. I found lesspass , which is open source and can be self-hosted. It nearly filled my needs, except migrating to it would mean I would have to change all my site passwords. Furthermore, there's no way to change the master password without changing all the website passwords it generates. So I set out to build my ideal password manager. Essentially I adopted the extremely secure computed passwords of lesspass, but added the ability to use AES-256 encryption for \"custom\" passwords and \"secure notes.\" This way, one can optionally store any password one wants. This also allowed me to add the ability to change the master password. Note When changing a master password in Strongman, all the computed passwords associated with the old master password are converted to AES-256 encrypted passwords using the new master password. Installation \uf0c1 Installation is not necessary for most users, since the Strongman project hosts the web app for free public access: https://strongman.tech/app . If you wish to run the web app on your own server, or to help with development, download the project from the github repository . Upload the \"app\" directory to any location accessible to your php7.1+-enabled web server. Make sure the \"data-source\" directory is writable by your web server user. You should also be sure that the site can't be accessed by both the base domain and the www subdomain, so that cookies can work properly. That's it. There's no database. Account information is stored in files, one file per master password. Strongman Security \uf0c1 Security Overview \uf0c1 According to a security analysis presented at the 23rd Usenix Security Symposium in 2014, 80% of the web-based password managers tested were insecure. Strongman should be immune to the cited vulnerabilities due to its statelessness as well as the lack of vulnerable features such as bookmarklets, one-time passwords, and shared passwords. I invite others to perform a security audit for Strongman. Computed Passwords \uf0c1 Strongman allows lesspass-style computed passwords, which does not involve storing the password at all. The password is \"recalculated\" from the master password, domain name, username, and password options, such as length and character sets. For these computed passwords, only a \"profile\" is stored. Here is an example \"profile\" entry from my own Strongman account. (I have modified the email address.) [vitacost.com] myemail@example.com = 7,14,1,,0,1542057929 In this case, vitacost.com is the domain name, and myemail@example.com is the username. The other profile information is: 7: bitfield-encoded character set. 7 means use upper/lowercase letters and numbers, but no special characters. 14: password length 1: password sequence number (This is incremented to create a new computed password.) empty: encrypted secure notes (none in this case) 0: Password category number 1542057929: timestamp to keep track of password age In sum, computed passwords involve no password storage whatsoever. However, they are very inflexible. Computed passwords cannot be modified by the user other than specifying the character set and length. So if you already have some secure passwords that you'd like to keep using with Strongman, computed passwords are not a solution. Plus, as explained in Why I Created Strongman , the master password cannot be changed without changing all the computed passwords. To solve this problem, Strongman allows storing AES-encrypted passwords and notes, described in the next section. AES-Encrypted Passwords and Notes \uf0c1 Whenever you need to store a particular password (rather than use a computed one) you click the \"Save\" button in Strongman. That causes the password to be encrypted (by the webpage, using javascript) and then sent to the server for storage. This is military-grade encryption, and in my opinion is every bit as secure as the computed passwords. When using encrypted passwords, Strongman remains stateless . Futhermore, the AES-encryption takes place in the browser, before being transmitted to the server for storage. In addition to encrypted passwords, Strongman offers encrypted secure notes . This allows you to add any sort of information to either a computed or an encrypted password entry. Here's an example of an encrypted password entry from my own Strongman account: [wimaxcr.com] invoice@ = 15,14,1,fc430283546cf012faf69539a13c5bd4,0,cb4c00b93772d665d6e8f8158f09779f,1539199590 Here, wimaxcr.com is the domain name, and invoice@ is the username. The other profile information is: 15: character sets (ignored) 14: password length (ignored) 1: password sequence number (ignored) fc430283546cf012faf69539a13c5bd4: AES-256 encrypted note 0: Password category number cb4c00b93772d665d6e8f8158f09779f: AES-256 encrypted password 1539199590: timestamp to keep track of password age The Master Password \uf0c1 The Password Dilema \uf0c1 It is surprisingly difficult for a human to choose a strong password. Humans are not made to think at random; we are creatures of patterns and habits. On the other hand, random (machine chosen) passwords consisting of letters, numbers, and symbols are hard to memorize. How would you like to memorize this example 14-character password: wyY#XiQ1h0E/2~? On the other hand, simply mangling dictionary words to create a password might look secure, but it probably isn't. Here's a web comic with commentary that illustrates that point well. The conclusion drawn by the comic is \"Through 20 years of effort, we've successfully trained everyone to use passwords that are hard for humans to remember, but easy for computers to guess.\" Diceware Passwords \uf0c1 This is where \"Diceware\" passwords come to the rescue. It turns out that humans ARE capable of easily memorizing \"passphrases\" consisting of, say, 7 random words , taken from a \"Diceware\" dictionary of 7,776 words. This results in a passphrase which is similar in entropy (difficulty to guess) to the 14 character password. Here is an example 7-word Diceware passphrase: \"catalyst sedative certify unused gap dodge alienate\". If you're not completely convinced that a random series of words (Diceware passphrase) is far better than a random or contrived series of characters, please read this excellent article about Diceware . When you are ready to obtain a Diceware passphrase, take a look at this excellent online Diceware passphrase generator . In addition to generating passphrases using the browser's built-in random number generator, you can use real dice with it. As a final note: if a brute force attacker were to obtain a password hash created from a 7-word Diceware passphrase, and if he could muster 1,000,000,000,000 guesses per second (only possible by a nation state player such as the NSA), the average time to guess a 7-word passphrase would be over 27 million years!","title":"Home"},{"location":"#strongman","text":"Free Open Source Online Password Manager","title":"Strongman"},{"location":"#overview","text":"Strongman is a free open-source online password manager written in javascript with a touch of php. Strongman has two basic modes of functionality: It uses a master password combined with the username and domain to create \"computed\" passwords (similar to lesspass ). In this mode, only a \"password profile\" is stored on the server. The site password itself is not stored. It can use the master password to encrypt (AES-256) \"custom\" passwords and \"secure notes,\" which are then stored on a web server. The emphasis is on speed , security , and simplicity . Open Strongman Password Manager","title":"Overview"},{"location":"#features","text":"Strongman is completely free and open source. Diceware master passphrases are strongly recommended, and in fact must be used unless overridden by a setting. It provides both lesspass-style computed passwords as well as AES-256-encrypted \"custom\" passwords. Strongman does all password computations as well as AES-256 encryption/decryption of custom passwords in your browser . Your master password is never transmitted to the server. Being an online service, Strongman is available from all your Internet-connected devices. There is no need to synchronize password databases among devices. Like all good security software, the source code is available for inspection! ( github repository ) Strongman does not require signup or login. Since there is no session, it is stateless , adding greatly to its security. You need only enter your master password, which never leaves your browser page (examine the source code if you want to confirm that). Strongman is extremely simple and fast to use. It aims to put your password into the computer clipboard with as few clicks as possible. It doesn't fill any web forms for you, to avoid security risks. The app is mobile-adaptive for use on cell phones and the like. Later, with help from the Github community, I may add a native Android app. The truly paranoid who cannot audit the source code can turn off online mode after the Strongman app is loaded. In offline mode, stored password profiles and encrypted passwords are unavailable, but computed passwords will work fine.","title":"Features"},{"location":"#why-i-created-strongman","text":"There are many password managers. Why did I invent a new one? In the first place, I became convinced that for proper security for online accounts, everyone should use a password manager . But I couldn't fully trust a program that wasn't open source, which ruled out all the commercial ones I knew about. Also, I wanted to be able to host it on my own server. That greatly reduced my options. I also wanted great speed and ease of use. I found lesspass , which is open source and can be self-hosted. It nearly filled my needs, except migrating to it would mean I would have to change all my site passwords. Furthermore, there's no way to change the master password without changing all the website passwords it generates. So I set out to build my ideal password manager. Essentially I adopted the extremely secure computed passwords of lesspass, but added the ability to use AES-256 encryption for \"custom\" passwords and \"secure notes.\" This way, one can optionally store any password one wants. This also allowed me to add the ability to change the master password. Note When changing a master password in Strongman, all the computed passwords associated with the old master password are converted to AES-256 encrypted passwords using the new master password.","title":"Why I Created Strongman"},{"location":"#installation","text":"Installation is not necessary for most users, since the Strongman project hosts the web app for free public access: https://strongman.tech/app . If you wish to run the web app on your own server, or to help with development, download the project from the github repository . Upload the \"app\" directory to any location accessible to your php7.1+-enabled web server. Make sure the \"data-source\" directory is writable by your web server user. You should also be sure that the site can't be accessed by both the base domain and the www subdomain, so that cookies can work properly. That's it. There's no database. Account information is stored in files, one file per master password.","title":"Installation"},{"location":"#strongman-security","text":"","title":"Strongman Security"},{"location":"#security-overview","text":"According to a security analysis presented at the 23rd Usenix Security Symposium in 2014, 80% of the web-based password managers tested were insecure. Strongman should be immune to the cited vulnerabilities due to its statelessness as well as the lack of vulnerable features such as bookmarklets, one-time passwords, and shared passwords. I invite others to perform a security audit for Strongman.","title":"Security Overview"},{"location":"#computed-passwords","text":"Strongman allows lesspass-style computed passwords, which does not involve storing the password at all. The password is \"recalculated\" from the master password, domain name, username, and password options, such as length and character sets. For these computed passwords, only a \"profile\" is stored. Here is an example \"profile\" entry from my own Strongman account. (I have modified the email address.) [vitacost.com] myemail@example.com = 7,14,1,,0,1542057929 In this case, vitacost.com is the domain name, and myemail@example.com is the username. The other profile information is: 7: bitfield-encoded character set. 7 means use upper/lowercase letters and numbers, but no special characters. 14: password length 1: password sequence number (This is incremented to create a new computed password.) empty: encrypted secure notes (none in this case) 0: Password category number 1542057929: timestamp to keep track of password age In sum, computed passwords involve no password storage whatsoever. However, they are very inflexible. Computed passwords cannot be modified by the user other than specifying the character set and length. So if you already have some secure passwords that you'd like to keep using with Strongman, computed passwords are not a solution. Plus, as explained in Why I Created Strongman , the master password cannot be changed without changing all the computed passwords. To solve this problem, Strongman allows storing AES-encrypted passwords and notes, described in the next section.","title":"Computed Passwords"},{"location":"#aes-encrypted-passwords-and-notes","text":"Whenever you need to store a particular password (rather than use a computed one) you click the \"Save\" button in Strongman. That causes the password to be encrypted (by the webpage, using javascript) and then sent to the server for storage. This is military-grade encryption, and in my opinion is every bit as secure as the computed passwords. When using encrypted passwords, Strongman remains stateless . Futhermore, the AES-encryption takes place in the browser, before being transmitted to the server for storage. In addition to encrypted passwords, Strongman offers encrypted secure notes . This allows you to add any sort of information to either a computed or an encrypted password entry. Here's an example of an encrypted password entry from my own Strongman account: [wimaxcr.com] invoice@ = 15,14,1,fc430283546cf012faf69539a13c5bd4,0,cb4c00b93772d665d6e8f8158f09779f,1539199590 Here, wimaxcr.com is the domain name, and invoice@ is the username. The other profile information is: 15: character sets (ignored) 14: password length (ignored) 1: password sequence number (ignored) fc430283546cf012faf69539a13c5bd4: AES-256 encrypted note 0: Password category number cb4c00b93772d665d6e8f8158f09779f: AES-256 encrypted password 1539199590: timestamp to keep track of password age","title":"AES-Encrypted Passwords and Notes"},{"location":"#the-master-password","text":"","title":"The Master Password"},{"location":"#the-password-dilema","text":"It is surprisingly difficult for a human to choose a strong password. Humans are not made to think at random; we are creatures of patterns and habits. On the other hand, random (machine chosen) passwords consisting of letters, numbers, and symbols are hard to memorize. How would you like to memorize this example 14-character password: wyY#XiQ1h0E/2~? On the other hand, simply mangling dictionary words to create a password might look secure, but it probably isn't. Here's a web comic with commentary that illustrates that point well. The conclusion drawn by the comic is \"Through 20 years of effort, we've successfully trained everyone to use passwords that are hard for humans to remember, but easy for computers to guess.\"","title":"The Password Dilema"},{"location":"#diceware-passwords","text":"This is where \"Diceware\" passwords come to the rescue. It turns out that humans ARE capable of easily memorizing \"passphrases\" consisting of, say, 7 random words , taken from a \"Diceware\" dictionary of 7,776 words. This results in a passphrase which is similar in entropy (difficulty to guess) to the 14 character password. Here is an example 7-word Diceware passphrase: \"catalyst sedative certify unused gap dodge alienate\". If you're not completely convinced that a random series of words (Diceware passphrase) is far better than a random or contrived series of characters, please read this excellent article about Diceware . When you are ready to obtain a Diceware passphrase, take a look at this excellent online Diceware passphrase generator . In addition to generating passphrases using the browser's built-in random number generator, you can use real dice with it. As a final note: if a brute force attacker were to obtain a password hash created from a 7-word Diceware passphrase, and if he could muster 1,000,000,000,000 guesses per second (only possible by a nation state player such as the NSA), the average time to guess a 7-word passphrase would be over 27 million years!","title":"Diceware Passwords"},{"location":"user-guide/","text":"Using Strongman \uf0c1 Open Strongman Password Manager Fast and Easy Instructions \uf0c1 To Retrieve a Password \uf0c1 Enter the master passphrase Start typing the domain name in the 'Domain' field. If you have used this password before, you will see the domain-username in a dropdown list. Click to choose it. You're done; the password is automatically copied to the clipboard for you (unless you've disabled that in the settings menu.) If you have a lot of password entries, you can filter them by category. To Create a New Password Entry \uf0c1 Just enter the domain and username. Change the password computation options for this username if necessary (use the '\u2630' icon). Select the appropriate category from the dropdown list. Click the \"Compute\" button. The password is calculated and (optionally) copied to clipboard. The next time you need this password, you can select it from the dropdown list. This is a computed password. If you need to change it later, you can increment the password number in the '\u2630' options menu. If you want to want to use your own password instead of a computed one, just edit edit the password field and click the \"Save\" button. This \"custom\" password will be AES256-encrypted and stored on the server. Secure Notes \uf0c1 Any password entry, either \"computed\" or \"custom\", can have AES-256- encrypted secure notes. Click the book icon just above the password entry field. A text area for the notes will pop into view. When done, click the \"Save\" link to encrypt and save your notes to the server. Password Categories \uf0c1 New in version 1.10: You can now organize your password into categories. The default categories are: Uncategorized Banking E-commerce Services Social Media Admin Panel Forums Gov Plus there are 2 additional unnamed categories available. You can change the names of any of these categories as you wish. Look in \"Settings and Tools\" at the bottom of the Strongman window. Note To Change the Master Password Enter the new master password and compute or save a site password. That creates a new Strongman account with the new master password. Customized category names are not imported. Therefore, if you have modified the default category names, it is recommended that before importing you set up the categories in the new account to be the same as those in the old (origin) account. Use \"Import Passwords from Another Strongman Account\" (under \"Settings and Tools\" near the bottom of the Strongman app), specifying the master password of the old account. After the passwords and notes are imported, you can delete the old Strongman account via the 'Delete Strongman Account' option. Short Demo Video \uf0c1 To be published soon.","title":"User Guide"},{"location":"user-guide/#using-strongman","text":"Open Strongman Password Manager","title":"Using Strongman"},{"location":"user-guide/#fast-and-easy-instructions","text":"","title":"Fast and Easy Instructions"},{"location":"user-guide/#to-retrieve-a-password","text":"Enter the master passphrase Start typing the domain name in the 'Domain' field. If you have used this password before, you will see the domain-username in a dropdown list. Click to choose it. You're done; the password is automatically copied to the clipboard for you (unless you've disabled that in the settings menu.) If you have a lot of password entries, you can filter them by category.","title":"To Retrieve a Password"},{"location":"user-guide/#to-create-a-new-password-entry","text":"Just enter the domain and username. Change the password computation options for this username if necessary (use the '\u2630' icon). Select the appropriate category from the dropdown list. Click the \"Compute\" button. The password is calculated and (optionally) copied to clipboard. The next time you need this password, you can select it from the dropdown list. This is a computed password. If you need to change it later, you can increment the password number in the '\u2630' options menu. If you want to want to use your own password instead of a computed one, just edit edit the password field and click the \"Save\" button. This \"custom\" password will be AES256-encrypted and stored on the server.","title":"To Create a New Password Entry"},{"location":"user-guide/#secure-notes","text":"Any password entry, either \"computed\" or \"custom\", can have AES-256- encrypted secure notes. Click the book icon just above the password entry field. A text area for the notes will pop into view. When done, click the \"Save\" link to encrypt and save your notes to the server.","title":"Secure Notes"},{"location":"user-guide/#password-categories","text":"New in version 1.10: You can now organize your password into categories. The default categories are: Uncategorized Banking E-commerce Services Social Media Admin Panel Forums Gov Plus there are 2 additional unnamed categories available. You can change the names of any of these categories as you wish. Look in \"Settings and Tools\" at the bottom of the Strongman window. Note To Change the Master Password Enter the new master password and compute or save a site password. That creates a new Strongman account with the new master password. Customized category names are not imported. Therefore, if you have modified the default category names, it is recommended that before importing you set up the categories in the new account to be the same as those in the old (origin) account. Use \"Import Passwords from Another Strongman Account\" (under \"Settings and Tools\" near the bottom of the Strongman app), specifying the master password of the old account. After the passwords and notes are imported, you can delete the old Strongman account via the 'Delete Strongman Account' option.","title":"Password Categories"},{"location":"user-guide/#short-demo-video","text":"To be published soon.","title":"Short Demo Video"},{"location":"about/contributing/","text":"Contributing to Strongman \uf0c1 The Strongman project welcomes contributions from developers and users in the open source community. Contributions can be made in a number of ways, a few examples are: Code patches via pull requests Documentation improvements Bug reports and patch reviews Code of Conduct \uf0c1 Everyone interacting in the Strongman project's codebases, issue trackers, chat rooms, and mailing lists is expected to follow the PyPA Code of Conduct . Reporting an Issue \uf0c1 Please include as much detail as you can. Let us know your browser type and version. We cannot address issues with self-hosted instances of Strongman that are not reproducable on our public Strongman app.","title":"Contributing"},{"location":"about/contributing/#contributing-to-strongman","text":"The Strongman project welcomes contributions from developers and users in the open source community. Contributions can be made in a number of ways, a few examples are: Code patches via pull requests Documentation improvements Bug reports and patch reviews","title":"Contributing to Strongman"},{"location":"about/contributing/#code-of-conduct","text":"Everyone interacting in the Strongman project's codebases, issue trackers, chat rooms, and mailing lists is expected to follow the PyPA Code of Conduct .","title":"Code of Conduct"},{"location":"about/contributing/#reporting-an-issue","text":"Please include as much detail as you can. Let us know your browser type and version. We cannot address issues with self-hosted instances of Strongman that are not reproducable on our public Strongman app.","title":"Reporting an Issue"},{"location":"about/credits/","text":"Credits and Thanks \uf0c1 Lesspass \uf0c1 Lesspass was the inspiration for this program. I wish to thank the creators of Lesspass for making their excellent program open source, and pointing the way for browser-based, stateless password management. I took some of the password generation code from Lesspass . AES-JS \uf0c1 Used in Strongman for AES-256 encryption and decryption in javascript. Note From the AES-JS README file: A pure JavaScript implementation of the AES block cipher algorithm and all common modes of operation (CBC, CFB, CTR, ECB and OFB). Features 1. Pure JavaScript (with no dependencies) 2. Supports all key sizes (128-bit, 192-bit and 256-bit) 3. Supports all common modes of operation (CBC, CFB, CTR, ECB and OFB) 4. Works in either node.js or web browsers Jshashes \uf0c1 Used for sha256 hashes in javascript Note From the jshashes README file on Github : jshashes is lightweight library implementing the most extended cryptographic hash function algorithms in pure JavaScript (ES5 compliant). The goal is to provide an dependency-free, fast and reliable solution for hash algorithms for both client-side and server-side JavaScript environments. The code is fully compatible with the ECMAScript 5 specification and is used in production in browsers and node.js/io.js biginteger.js \uf0c1 Used for arbitrary-sized big integer arithmetic in javascript See https://silentmatt.com/biginteger Moment.js \uf0c1 Parse, validate, manipulate, and display dates and times in JavaScript. https://momentjs.com/ Autocomplete for Jquery \uf0c1 Used for Strongman's dropdown list with ajax lookup, which is at the core of the user inferface. [https://github.com/jbdemonte/autocomplete] Also, thanks to Jquery and w3.css","title":"Credits"},{"location":"about/credits/#credits-and-thanks","text":"","title":"Credits and Thanks"},{"location":"about/credits/#lesspass","text":"Lesspass was the inspiration for this program. I wish to thank the creators of Lesspass for making their excellent program open source, and pointing the way for browser-based, stateless password management. I took some of the password generation code from Lesspass .","title":"Lesspass"},{"location":"about/credits/#aes-js","text":"Used in Strongman for AES-256 encryption and decryption in javascript. Note From the AES-JS README file: A pure JavaScript implementation of the AES block cipher algorithm and all common modes of operation (CBC, CFB, CTR, ECB and OFB). Features 1. Pure JavaScript (with no dependencies) 2. Supports all key sizes (128-bit, 192-bit and 256-bit) 3. Supports all common modes of operation (CBC, CFB, CTR, ECB and OFB) 4. Works in either node.js or web browsers","title":"AES-JS"},{"location":"about/credits/#jshashes","text":"Used for sha256 hashes in javascript Note From the jshashes README file on Github : jshashes is lightweight library implementing the most extended cryptographic hash function algorithms in pure JavaScript (ES5 compliant). The goal is to provide an dependency-free, fast and reliable solution for hash algorithms for both client-side and server-side JavaScript environments. The code is fully compatible with the ECMAScript 5 specification and is used in production in browsers and node.js/io.js","title":"Jshashes"},{"location":"about/credits/#bigintegerjs","text":"Used for arbitrary-sized big integer arithmetic in javascript See https://silentmatt.com/biginteger","title":"biginteger.js"},{"location":"about/credits/#momentjs","text":"Parse, validate, manipulate, and display dates and times in JavaScript. https://momentjs.com/","title":"Moment.js"},{"location":"about/credits/#autocomplete-for-jquery","text":"Used for Strongman's dropdown list with ajax lookup, which is at the core of the user inferface. [https://github.com/jbdemonte/autocomplete] Also, thanks to Jquery and w3.css","title":"Autocomplete for Jquery"},{"location":"about/development/","text":"Development Notes and Guidelines \uf0c1 This page under construction.","title":"Development"},{"location":"about/development/#development-notes-and-guidelines","text":"This page under construction.","title":"Development Notes and Guidelines"},{"location":"about/license/","text":"License \uf0c1 The legal stuff. Copyright \uf0c1 2019 Lloyd Standish The Strongman Program \uf0c1 This program licensed under GLP v3 and is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. Strongman Password Manager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. https://www.gnu.org/licenses/ Strongman.tech free password manager service \uf0c1 The free service offered at https://strongman.tech/app/ is provided in the hope that it will be useful, but like the self-hosted program, is provided without warranty of any kind. The following disclaimer of liability applies to the free service offered at https://strongman.tech/app/ . Limitation of Liability \uf0c1 IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL THE SERVICE PROVIDER OF HTTPS://STRONGMAN.TECH/APP/ BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE SERVICE (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES BY A FAILURE OF THE SERVICE, EVEN IF THE SERVICE PROVIDER OF HTTPS://STRONGMAN.TECH/APP/ HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH FAILURE AND CONSEQUENT DAMAGES.","title":"License"},{"location":"about/license/#license","text":"The legal stuff.","title":"License"},{"location":"about/license/#copyright","text":"2019 Lloyd Standish","title":"Copyright"},{"location":"about/license/#the-strongman-program","text":"This program licensed under GLP v3 and is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. Strongman Password Manager is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. https://www.gnu.org/licenses/","title":"The Strongman Program"},{"location":"about/license/#strongmantech-free-password-manager-service","text":"The free service offered at https://strongman.tech/app/ is provided in the hope that it will be useful, but like the self-hosted program, is provided without warranty of any kind. The following disclaimer of liability applies to the free service offered at https://strongman.tech/app/ .","title":"Strongman.tech free password manager service"},{"location":"about/license/#limitation-of-liability","text":"IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL THE SERVICE PROVIDER OF HTTPS://STRONGMAN.TECH/APP/ BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE SERVICE (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES BY A FAILURE OF THE SERVICE, EVEN IF THE SERVICE PROVIDER OF HTTPS://STRONGMAN.TECH/APP/ HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH FAILURE AND CONSEQUENT DAMAGES.","title":"Limitation of Liability"},{"location":"about/release-notes/","text":"Release Notes \uf0c1 Maintenance team \uf0c1 The current members of the Strongman team: @lstandish Version 1.0 ( initial release ) \uf0c1 Version 1.10 \uf0c1 Added password category support Code cleanup Files cleanup Upgrade moment.js to latest upstream version","title":"Release Notes"},{"location":"about/release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"about/release-notes/#maintenance-team","text":"The current members of the Strongman team: @lstandish","title":"Maintenance team"},{"location":"about/release-notes/#version-10-initial-release","text":"","title":"Version 1.0 (initial release)"},{"location":"about/release-notes/#version-110","text":"Added password category support Code cleanup Files cleanup Upgrade moment.js to latest upstream version","title":"Version 1.10"}]}